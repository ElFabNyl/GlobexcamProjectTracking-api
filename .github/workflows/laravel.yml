name: Laravel

on:
  push:

    branches: [ main ]

  pull_request:
    branches: [ main ]

jobs:
  laravel-tests:

    runs-on: ${{ matrix.operating-system }}

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: no
          MYSQL_DATABASE: test-api-data
          ports:
            - 33306:3306
          options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    strategy:
      matrix:
        php-version:
          - "7.4"
        operating-system: [ubuntu-latest]

    steps:
    - uses: shivammathur/setup-php@b7d1d9c9a92d8d8463ce36d7f60da34d461724f8
      with:
        php-version: "${{ matrix.php-version }}"

    - uses: actions/checkout@v2
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"

    - name: composer update
      run: composer update -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Installation des dependance
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Generate key
      run: php artisan key:generate

    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache

    - name: Copy .env
      run: php -r "file_exists('.env.testing') || copy('.env.example', '.env.testing');"

    - name: Execution des Tests
      run: php artisan test
      env:
        DB_PORT: ${{ job.services.mysql.ports[3306] }}
        DB_USERNAME: root
        DYNAMODB_CACHE_TABLE: laravel_dynamodb_test
        DYNAMODB_ENDPOINT: "http://localhost:8000"


#   static-code-analysis:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@master
#         with:
#           php-version: "${{ matrix.php-version }}"

#       - name: PHPStan
#         uses: docker://jakzal/phpqa:php7.4-alpine
#         with:
#           args: phpstan analyze -l 3 ./app/Http ./app/Models

#      - name: Create file
#        run: touch .php_cs
#      - name: PHP-CS-Fixer
#        uses: docker://jakzal/phpqa:php7.4-alpine
#        with:
#          args: php-cs-fixer --dry-run --rules=@PSR2 --verbose --diff fix

#      - name: Deptrac
#        uses: docker://jakzal/phpqa:php7.4-alpine
#        with:
#          args: deptrac --no-interaction --ansi
